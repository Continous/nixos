# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" "v4l2loopback" "cpupower" ];
  boot.kernelParams = [ "nvidia_drm.modeset=1" "nvidia_drm.fbdev=1" "amd_pstate=active" "usbcore.autosuspend=-1" "acpi_enforce_resources=lax" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/c9c5469b-95e3-498d-aeb4-095f508c9827";
      fsType = "ext4";
    };

  fileSystems."/mnt/NVMe Flash/Games Drive V4" =
    { device = "/dev/disk/by-uuid/1cf2fcdd-0074-4ce5-893c-7c9c69c968bb";
      fsType = "ext4";
    };

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/EA56-2D52";
      fsType = "vfat";
    };

  fileSystems."/mnt/SATA Flash/Games Drive V3" =
    { device = "/dev/disk/by-uuid/c6801675-1bf5-4f8e-83bd-235803f796c5";
      fsType = "ext4";
    };

  fileSystems."/mnt/NVMe Flash/Games Drive V2" =
    { device = "/dev/disk/by-uuid/dc54f294-02d4-4467-8da9-fa7df1a2c163";
      fsType = "ext4";
    };

  fileSystems."/mnt/Bulk Storage/Videos MKII" =
    { device = "/dev/disk/by-uuid/612e0c76-8ae1-4ae8-b57b-ce5fd99ba3dc";
      fsType = "xfs";
    };

#  fileSystems."/mnt/Bulk Storage/Videos MKI" =
#    { device = "/dev/disk/by-uuid/1db82918-e254-4ab5-bc23-e56f2ac7c081";
#      fsType = "xfs";
#    };  She's dead jim.

  fileSystems."/mnt/SATA Flash/Games Drive V1" =
    { device = "/dev/disk/by-uuid/9482fef3-843f-4231-a264-9e9de7e4ac0b";
      fsType = "ext4";
    };
  zramSwap.enable = true;
  zramSwap.memoryPercent = 25;


#  swapDevices =
#    [ { device = "/dev/disk/by-uuid/62164ed2-4d09-4507-9d11-38c3f2d226c6"; }
#    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp7s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
